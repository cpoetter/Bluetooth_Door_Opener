#!/bin/bash

#Parameter:
device=$1
name=$2
device_number=$3
device_border_1=$4
device_border_2=$5

if [ -z "$device" ]; then
    echo 'No device address given'
else

    if [ -z "$name" ]; then
        echo 'No device name given'
    else

        if [ -z "$device_number" ]; then
            echo 'No device number given'
        else

            if [ -z "$device_border_1" ]; then
                echo 'No device border 1 given'
            else

                if [ -z "$device_border_1" ]; then
                    echo 'No device border 1 given'
                else

                    # set start value
               	    sudo su -l root -c 'echo none >/sys/class/leds/led0/trigger'
                    sudo su -l root -c 'echo '0' >/sys/class/leds/led0/brightness'

                    # Exports pin to userspace
                    sudo su -l root -c 'echo "18" > /sys/class/gpio/export'                  

                    # Sets pin 18 as an output, GPIO 12
                    sudo su -l root -c 'echo "out" > /sys/class/gpio/gpio18/direction'

                    # Sets pin 18 to high
                    sudo su -l root -c 'echo "1" > /sys/class/gpio/gpio18/value'

                    ## Reads pin 4
                    #echo "4" > /sys/class/gpio/export
                    #echo "in" > /sys/class/gpio/gpio4/direction
                    #cat /sys/class/gpio/gpio4/value

                    # define global variables
                    status="undefined"

                    echo 'Start scan for ' $name

                    #Command loop:
                    while [ 1 ]; do
                        timestamp=`date`

                        btstatus=$(hcitool rssi $device  2>&1)

                        homekit=$(cat /home/pi/Bluetooth_Door_Opener/homekit.status)

                        if [[ $homekit == *"1"* ]]; then

                            if [[ $status != *"apple"* ]]; then
                                echo $timestamp': '  $name ' activated homekit'
                                status="apple"
                            fi

                            # Open the door
                            echo $timestamp': Open door for ' $name
                            sudo su -l root -c 'echo '1' >/sys/class/leds/led0/brightness'

                            # Sets pin 18 to low
                            sudo su -l root -c 'echo "0" > /sys/class/gpio/gpio18/value'

                            # Time to pass through door
                            sleep 1

                            # Close door
                            echo $timestamp': Close door for '$name
                            sudo su -l root -c 'echo '0' >/sys/class/leds/led0/brightness'

                            # Sets pin 18 to high
                            sudo su -l root -c 'echo "1" > /sys/class/gpio/gpio18/value'

                            # Time to leave door area
                            sleep 5

                        elif [[ $btstatus == *"Not connected"* ]]; then

                            if [[ $status != *"away"* ]]; then
                                echo $timestamp': ' $name ' out of reach'
                                status="away"
                            fi

                            # If device is not connectd jet/new in range, attempt connection
                            sudo rfcomm connect $device_number $device 1 2> /dev/null >/dev/null &
                            sleep 1

                        elif [[ $btstatus == *"RSSI return value"* ]]; then
                            # Device is connected

                            rssi=$(echo $btstatus | sed -e 's/RSSI return value: //g')

                            {
                                remote_rssi=`ssh pi@dooropener2.local "cat /home/pi/Bluetooth_Door_Opener/$name"`
		            }||{
                                remote_rssi=0
		            }

                            if [ $rssi -gt $device_border_1 ] && [ $remote_rssi -lt $device_border_2 ]; then
                            #if [ $rssi -gt $device_border_1 ]; then
 
                                 if [[ $status != *"home"* ]]; then
                                     echo $timestamp': '  $name ' is home'
                                     status="home"
                                 fi

                                # Open the door                
                                echo $timestamp': Open door for ' $name
                                sudo su -l root -c 'echo '1' >/sys/class/leds/led0/brightness'

                                # Sets pin 18 to low
                                sudo su -l root -c 'echo "0" > /sys/class/gpio/gpio18/value'

                                # Time to pass through door
                                sleep 1

                                # Close door
                                echo $timestamp': Close door for '$name
                                sudo su -l root -c 'echo '0' >/sys/class/leds/led0/brightness'

                                # Sets pin 18 to high
                                sudo su -l root -c 'echo "1" > /sys/class/gpio/gpio18/value'

                                # Time to leave door area
                                sleep 5
                            else
                                if [[ $status != *"not_close_enough"* ]]; then
                                    echo $timestamp': ' $name ' is not close enough'
                                    status="not_close_enough"
                                fi
                            fi
                        fi

                        sleep 1

                    done
                fi
            fi
        fi
    fi
fi
